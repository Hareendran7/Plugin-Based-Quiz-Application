
import static java.lang.System.exit;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;


//Author  : S.Hareendran , ID : 19508409
//Purpose : Window for MCQ questions

public class QuizWindow extends javax.swing.JFrame {

    QuestionType b,c;
    String [] answers;
   
    public QuizWindow() {
        initComponents();
       
//Purpose : To deselect the Radio Buttons

        radio_option1.setSelected(false);
        radio_option2.setSelected(false);
        radio_option3.setSelected(false);
              
        try{
            
//Purpose : To retrieve the created Question Type Instances 
        b = QuizMap.QuestionTypePluginMap.get("MCQ");
        c = QuizMap.QuestionTypePluginMap.get("OneWord");
        
//       

//Purpose : Remove MCQ question from queue and display
        label_question.setText(b.removeQuestions());
        
        
//Purpose : Preview of next Question      
        if(c.peekQuestion() != "OneWordEND")
             label_nextQuestion.setText(c.peekQuestion()); 
        
        
        else  
            label_nextQuestion.setText(b.peekQuestion()); 
        
        
        
//Purpose : Counter to maintain no of questions displayed
        Score.noOfQuestions++;
       
//Purpose : Remove MCQ answers from queue and display them on radio buttons
        answers =b.removeAnswers();
        
        radio_option1.setText(answers[0]);
        radio_option2.setText(answers[1]);
        radio_option3.setText(answers[2]);
            
        radio_option1.setActionCommand(answers[0]);
        radio_option2.setActionCommand(answers[1]);
        radio_option3.setActionCommand(answers[2]);
        
        }
        
        catch(NullPointerException e ){
        
             System.out.println("Quiz Not Selected");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        label_question = new javax.swing.JLabel();
        radio_option1 = new javax.swing.JRadioButton();
        radio_option2 = new javax.swing.JRadioButton();
        radio_option3 = new javax.swing.JRadioButton();
        next = new javax.swing.JButton();
        label_nextQuestion = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label_question.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N

        buttonGroup1.add(radio_option1);
        radio_option1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        radio_option1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_option1ActionPerformed(evt);
            }
        });
        radio_option1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                radio_option1KeyPressed(evt);
            }
        });

        buttonGroup1.add(radio_option2);
        radio_option2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        buttonGroup1.add(radio_option3);
        radio_option3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        next.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        next.setText("Next");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        label_nextQuestion.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Next Question :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(radio_option1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(radio_option2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(radio_option3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(label_question, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(610, 610, 610)
                            .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(label_nextQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(label_question, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(radio_option1)
                .addGap(26, 26, 26)
                .addComponent(radio_option2)
                .addGap(29, 29, 29)
                .addComponent(radio_option3)
                .addGap(25, 25, 25)
                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_nextQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed

       
//Purpose : Check for correct answer and increase score        
        try{
            String a1=buttonGroup1.getSelection().getActionCommand();
            String ans = b.removeCorrectAnswer();

            if(a1 == ans){
                
                Score.count++;
            }
        }
        
        catch(NullPointerException e){
        
            System.out.println(" ");
        }
       
        
//Purpose : Remove MCQ/One Word question from queue and display or display score at end
        if(c.peekQuestion() != "OneWordEND"){
            QuizWindow2 d1 = new QuizWindow2();
            d1.setVisible(true);
            this.setVisible(false);
        }
        
        else if(b.peekQuestion() == "MCQEND"){
            JOptionPane.showMessageDialog(null, "Quiz Completed , Score :"+Score.count+" / "+Score.noOfQuestions);
            this.setVisible(false);
            exit (1);
        }
        else{
            
            radio_option1.setSelected(false);
            radio_option2.setSelected(false);
            radio_option3.setSelected(false);
        
            label_question.setText(b.removeQuestions());
            Score.noOfQuestions++;
            answers =b.removeAnswers();
        
        
            radio_option1.setText(answers[0]);
            radio_option2.setText(answers[1]);
            radio_option3.setText(answers[2]);
        
        
            radio_option1.setActionCommand(answers[0]);
            radio_option2.setActionCommand(answers[1]);
            radio_option3.setActionCommand(answers[2]);
            
        } 
        
//Purpose : Preview of next Question              
        if(b.peekQuestion() != "MCQEND")
            label_nextQuestion.setText(b.peekQuestion()); 
               
        else
            label_nextQuestion.setText(" ");
            
        
            
        
    }//GEN-LAST:event_nextActionPerformed

    private void radio_option1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_radio_option1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_option1KeyPressed

    private void radio_option1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_option1ActionPerformed
       
        
       
    }//GEN-LAST:event_radio_option1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuizWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuizWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuizWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuizWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuizWindow().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel label_nextQuestion;
    private javax.swing.JLabel label_question;
    private javax.swing.JButton next;
    private javax.swing.JRadioButton radio_option1;
    private javax.swing.JRadioButton radio_option2;
    private javax.swing.JRadioButton radio_option3;
    // End of variables declaration//GEN-END:variables
}
